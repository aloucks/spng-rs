steps:
  - bash: |
      set -e -x
      cargo +stable fmt --all -- --check
    displayName: Check formatting (stable only)
    condition: eq(variables['TOOLCHAIN'], 'stable')
  - bash: |
      set -e -x
      rustup component add clippy
      cargo clippy --all -- -D warnings
    displayName: Run clippy (stable only)
    condition: eq(variables['TOOLCHAIN'], 'stable')
    env:
      RUST_BACKTRACE: 1
      CARGO_INCREMENTAL: 0

  - bash: |
      set -e -x
      cargo test --no-run -vv
    displayName: Build
    env:
      RUST_BACKTRACE: 1
      CARGO_INCREMENTAL: 0
  - bash: |
      set -e -x
      cargo test --all-targets --manifest-path=spng-sys/Cargo.toml
      cargo test --all-targets --manifest-path=spng/Cargo.toml

    displayName: Test
    env:
      RUST_BACKTRACE: 1
      CARGO_INCREMENTAL: 0
  - bash: |
      set -e -x
      cargo test --all-targets --manifest-path=spng-benchmarks/Cargo.toml
    displayName: Test benches
    env:
      RUST_BACKTRACE: 1
      CARGO_INCREMENTAL: 0
  - bash: |
      set -e -x
      cargo test --all-targets --manifest-path=spng-benchmarks/Cargo.toml --release
    displayName: Test benches release
    env:
      RUST_BACKTRACE: 1
      CARGO_INCREMENTAL: 0

  - bash: |
      set -e -x
      cargo test --all-targets --features zlib-ng --manifest-path=spng-sys/Cargo.toml
      cargo test --all-targets --features zlib-ng --manifest-path=spng/Cargo.toml
    displayName: Test (features=zlib-ng)
    env:
      RUST_BACKTRACE: 1
      CARGO_INCREMENTAL: 0
  - bash: |
      set -e -x
      cargo test --all-targets --features zlib-ng --manifest-path=spng-benchmarks/Cargo.toml
    displayName: Test benches (features=zlib-ng)
    env:
      RUST_BACKTRACE: 1
      CARGO_INCREMENTAL: 0
  - bash: |
      set -e -x
      cargo test --all-targets --features zlib-ng --manifest-path=spng-benchmarks/Cargo.toml --release
    displayName: Test benches release (features=zlib-ng)
    env:
      RUST_BACKTRACE: 1
      CARGO_INCREMENTAL: 0
